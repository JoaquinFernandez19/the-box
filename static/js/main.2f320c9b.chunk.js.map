{"version":3,"sources":["actions/index.js","components/Header.js","components/PreWorkPage.js","components/util/index.js","components/TaskItem.js","components/columns/Doing.js","components/columns/Finished.js","components/TodoForm.js","components/columns/Pending.js","components/TodoLists.js","components/Content.js","components/Tools.js","components/App.js","reducers/index.js","index.js"],"names":["cancelCreatingTodo","type","changeMode","id","mode","payload","connect","state","console","log","working","startProject","props","handleStartProject","className","onClick","PreWorkPage","ItemTypes","deleteTodo","taskId","useDrag","item","collect","monitor","isDragging","drag","ref","text","useDrop","accept","drop","isOver","style","backgroundColor","children","creatingTodo","createTodo","task","useState","inputValue","setInputValue","onSubmit","event","preventDefault","value","onChange","e","target","autoFocus","pendingList","creatingNewTodo","btnRef","useRef","useEffect","current","display","taskList","doingList","finishedList","map","key","anime","resetProject","window","confirm","App","DndProvider","backend","Backend","combineReducers","action","idCreator","length","filter","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"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","file":"static/js/main.2f320c9b.chunk.js","sourcesContent":["//Action creators\r\n\r\nexport const startProject = () => {\r\n\treturn {\r\n\t\ttype: 'START_PROJECT',\r\n\t};\r\n};\r\nexport const resetProject = () => {\r\n\treturn {\r\n\t\ttype: 'RESET_PROJECT',\r\n\t};\r\n};\r\nexport const changeProjectName = (oldProjectName, newProjectName) => {\r\n\treturn {\r\n\t\ttype: 'CHANGE_PROJECT_NAME',\r\n\t\tpayload: {\r\n\t\t\toldProjectName: oldProjectName,\r\n\t\t\tnewProjectName: newProjectName,\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport const creatingNewTodo = () => {\r\n\treturn {\r\n\t\ttype: 'CREATING_TODO',\r\n\t};\r\n};\r\nexport const cancelCreatingTodo = () => {\r\n\treturn {\r\n\t\ttype: 'CANCEL_CREATING_TODO',\r\n\t};\r\n};\r\n\r\nexport const createTodo = (task) => {\r\n\treturn {\r\n\t\ttype: 'CREATE_TODO',\r\n\t\tpayload: {\r\n\t\t\ttask: task,\r\n\t\t\tmode: 'pending',\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport const changeMode = (id, mode) => {\r\n\treturn {\r\n\t\ttype: 'CHANGE_MODE',\r\n\t\tpayload: {\r\n\t\t\tid: id,\r\n\t\t\tmode: mode,\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport const deleteTodo = (taskId) => {\r\n\treturn {\r\n\t\ttype: 'DELETE_TODO',\r\n\t\tpayload: {\r\n\t\t\ttaskId: taskId,\r\n\t\t},\r\n\t};\r\n};\r\nexport const changeBackground = (newImg) => {\r\n\treturn {\r\n\t\ttype: 'CHANGE_BACKGROUND',\r\n\t\tpayload: {\r\n\t\t\tnewImg: newImg,\r\n\t\t},\r\n\t};\r\n};\r\nexport const changeFont = (fontSelected) => {\r\n\treturn {\r\n\t\ttype: 'CHANGE_FONT',\r\n\t\tpayload: {\r\n\t\t\tfontSelected: fontSelected,\r\n\t\t},\r\n\t};\r\n};\r\nexport const changeColor = (colorSelected) => {\r\n\treturn {\r\n\t\ttype: 'CHANGE_COLOR',\r\n\t\tpayload: {\r\n\t\t\tcolorSelected: colorSelected,\r\n\t\t},\r\n\t};\r\n};\r\n","import React from 'react';\r\nimport '../styles/header.scss';\r\nimport { FaTasks } from 'react-icons/fa';\r\nimport { IoMdCheckboxOutline } from 'react-icons/io';\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport { startProject } from '../actions';\r\n//\r\nconst Header = (props) => {\r\n\tconst handleStartProject = () => {\r\n\t\tprops.startProject();\r\n\t};\r\n\r\n\tif (props.working) {\r\n\t\treturn (\r\n\t\t\t<div className=\"header\">\r\n\t\t\t\t<div className=\"new-project-btn active\" onClick={handleStartProject}>\r\n\t\t\t\t\t<p>Start</p>\r\n\t\t\t\t\t<FaTasks className=\"add-icon\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<h2>The Box</h2>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"header\">\r\n\t\t\t<div className=\"new-project-btn\" onClick={handleStartProject}>\r\n\t\t\t\t<p>Start</p>\r\n\t\t\t\t<IoMdCheckboxOutline className=\"add-icon\" />\r\n\t\t\t</div>\r\n\t\t\t<h2>The Box</h2>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\tconsole.log(state);\r\n\treturn {\r\n\t\tworking: state.working,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, { startProject })(Header);\r\n","import React from 'react';\r\nimport '../styles/preWorkPage.scss';\r\n\r\nconst PreWorkPage = () => {\r\n    return(<div className=\"pre-work-page\">\r\n                <h1>A task manager</h1>\r\n                <p>A click away of becoming organized (for free)</p>\r\n            </div>);\r\n}\r\n\r\nexport default PreWorkPage;","export const ItemTypes = {\r\n\tCARD: 'card',\r\n};\r\n","import React from 'react';\r\nimport '../styles/taskItem.scss';\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\nimport { connect } from 'react-redux';\r\nimport { deleteTodo } from '../actions';\r\n//Drag fucntion\r\nimport { useDrag } from 'react-dnd';\r\nimport { ItemTypes } from './util/index';\r\n\r\nconst TaskItem = (props) => {\r\n\t//drag\r\n\tconst [{ isDragging }, drag] = useDrag({\r\n\t\titem: {\r\n\t\t\ttype: ItemTypes.CARD,\r\n\t\t\tid: props.id,\r\n\t\t\tmode: props.mode,\r\n\t\t},\r\n\t\tcollect: (monitor) => ({\r\n\t\t\tisDragging: !!monitor.isDragging(),\r\n\t\t}),\r\n\t});\r\n\r\n\tconst closeTask = () => {\r\n\t\tprops.deleteTodo(props.id);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div id={props.id} className=\"task-item\" ref={drag}>\r\n\t\t\t<span className=\"color-state\"></span>\r\n\t\t\t<p>{props.text}</p>\r\n\t\t\t<div className=\"hiden-delete\" onClick={closeTask}>\r\n\t\t\t\t<AiOutlineClose className=\"icon\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default connect(null, { deleteTodo })(TaskItem);\r\n","import React from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport { ItemTypes } from '../util';\r\nimport { connect } from 'react-redux';\r\nimport { changeMode } from '../../actions';\r\n\r\nconst Doing = (props) => {\r\n\tconst [{ isOver }, drop] = useDrop({\r\n\t\taccept: ItemTypes.CARD,\r\n\t\tdrop: (item) => props.changeMode(item.id, 'doing'),\r\n\t\tcollect: (monitor) => ({\r\n\t\t\tisOver: !!monitor.isOver(),\r\n\t\t}),\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"doing\"\r\n\t\t\tref={drop}\r\n\t\t\tstyle={{ backgroundColor: isOver ? '#ebecf075' : '' }}>\r\n\t\t\t<h4>Working on it</h4>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default connect(null, { changeMode })(Doing);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useDrop } from 'react-dnd';\r\nimport { ItemTypes } from '../util';\r\nimport { changeMode } from '../../actions';\r\n\r\nconst Finished = (props) => {\r\n\tconst [{ isOver }, drop] = useDrop({\r\n\t\taccept: ItemTypes.CARD,\r\n\t\tdrop: (item) => props.changeMode(item.id, 'finished'),\r\n\t\tcollect: (monitor) => ({\r\n\t\t\tisOver: !!monitor.isOver(),\r\n\t\t}),\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"finished\"\r\n\t\t\tref={drop}\r\n\t\t\tstyle={{ backgroundColor: isOver ? '#ebecf075' : '' }}>\r\n\t\t\t<h4>Finished tasks</h4>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default connect(null, { changeMode })(Finished);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createTodo, cancelCreatingTodo } from '../actions';\r\nimport '../styles/todoForm.scss';\r\n\r\nconst TodoForm = (props) => {\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\r\n\tconst handleFormSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tif (inputValue !== '') {\r\n\t\t\tprops.createTodo(inputValue);\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\t};\r\n\r\n\tconst closeForm = () => {\r\n\t\tprops.cancelCreatingTodo();\r\n\t\tsetInputValue('');\r\n\t};\r\n\r\n\tconst handleInputChange = (e) => {\r\n\t\tsetInputValue(e.target.value);\r\n\t};\r\n\r\n\tif (props.creatingTodo) {\r\n\t\treturn (\r\n\t\t\t<div className=\"todo-form-div\">\r\n\t\t\t\t<form onSubmit={handleFormSubmit} className=\"todo-form\">\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={inputValue}\r\n\t\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className=\"btns-container\">\r\n\t\t\t\t\t\t<button type=\"submit\" className=\"confirm-btn\">\r\n\t\t\t\t\t\t\tCreate\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button type=\"cancel\" onClick={closeForm} className=\"cancel-btn\">\r\n\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn null;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcreatingTodo: state.creatingTodo,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, { createTodo, cancelCreatingTodo })(\r\n\tTodoForm,\r\n);\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { BsPlus } from 'react-icons/bs';\r\nimport TodoForm from '../TodoForm';\r\nimport { creatingNewTodo } from '../../actions';\r\nimport { connect } from 'react-redux';\r\n\r\n//\r\nimport { useDrop } from 'react-dnd';\r\nimport { ItemTypes } from '../util';\r\nimport { changeMode } from '../../actions';\r\n//\r\n//\r\nconst Pending = (props) => {\r\n\t//drop system\r\n\tconst [{ isOver }, drop] = useDrop({\r\n\t\taccept: ItemTypes.CARD,\r\n\t\tdrop: (item) => props.changeMode(item.id, 'pending'),\r\n\t\tcollect: (monitor) => ({\r\n\t\t\tisOver: !!monitor.isOver(),\r\n\t\t}),\r\n\t});\r\n\t//drop system\r\n\tconst btnRef = useRef();\r\n\r\n\tconst handleCreatingTodo = () => {\r\n\t\tprops.creatingNewTodo();\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.creatingTodo) {\r\n\t\t\tbtnRef.current.style.display = 'none';\r\n\t\t} else {\r\n\t\t\tbtnRef.current.style.display = 'flex';\r\n\t\t}\r\n\t}, [props.creatingTodo]);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"toDo\"\r\n\t\t\tref={drop}\r\n\t\t\tstyle={{ backgroundColor: isOver ? '#ebecf075' : '' }}>\r\n\t\t\t<h4>Pending Tasks</h4>\r\n\t\t\t{props.children}\r\n\r\n\t\t\t<div className=\"add-todo\" onClick={handleCreatingTodo} ref={btnRef}>\r\n\t\t\t\t<BsPlus className=\"add-todo-cion\" />\r\n\t\t\t\t<p>Add a pending task</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<TodoForm />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcreatingTodo: state.creatingTodo,\r\n\t\tpendingList: state.pendingList,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, { creatingNewTodo, changeMode })(\r\n\tPending,\r\n);\r\n","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n//components\r\n\r\nimport TaskItem from './TaskItem';\r\nimport Doing from './columns/Doing';\r\nimport Finished from './columns/Finished';\r\nimport Pending from './columns/Pending';\r\n//\r\nimport '../styles/todoLists.scss';\r\n\r\nconst TodoLists = (props) => {\r\n\t//drag and drop\r\n\r\n\tconst pendingList = props.taskList.map((task) => {\r\n\t\tif (task.mode === 'pending') {\r\n\t\t\treturn (\r\n\t\t\t\t<TaskItem\r\n\t\t\t\t\tkey={task.id}\r\n\t\t\t\t\tid={task.id}\r\n\t\t\t\t\ttext={task.text}\r\n\t\t\t\t\tmode={task.mode}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t});\r\n\r\n\tconst doingList = props.taskList.map((task) => {\r\n\t\tif (task.mode === 'doing') {\r\n\t\t\treturn (\r\n\t\t\t\t<TaskItem\r\n\t\t\t\t\tkey={task.id}\r\n\t\t\t\t\tid={task.id}\r\n\t\t\t\t\ttext={task.text}\r\n\t\t\t\t\tmode={task.mode}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t});\r\n\tconst finishedList = props.taskList.map((task) => {\r\n\t\tif (task.mode === 'finished') {\r\n\t\t\treturn (\r\n\t\t\t\t<TaskItem\r\n\t\t\t\t\tkey={task.id}\r\n\t\t\t\t\tid={task.id}\r\n\t\t\t\t\ttext={task.text}\r\n\t\t\t\t\tmode={task.mode}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className=\"content animated fadeIn\">\r\n\t\t\t<Pending> {pendingList}</Pending>\r\n\r\n\t\t\t<Doing> {doingList}</Doing>\r\n\r\n\t\t\t<Finished>{finishedList} </Finished>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\ttaskList: state.taskList,\r\n\t\tdoingList: state.doingList,\r\n\t\tfinishedList: state.finishedList,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(TodoLists);\r\n","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n//components\r\nimport PreWorkPage from './PreWorkPage';\r\nimport TodoLists from './TodoLists';\r\n//icons\r\n\r\n///\r\nconst Content = (props) => {\r\n\tif (props.working) {\r\n\t\treturn (\r\n\t\t\t<TodoLists/>\r\n\t\t);\r\n\t}\r\n\treturn (\r\n\t\t<PreWorkPage/>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tworking: state.working,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(Content);\r\n","import React from 'react';\r\nimport '../styles/tools.scss';\r\nimport { connect } from 'react-redux';\r\n\r\n//icons\r\nimport { FaSkullCrossbones, FaImage } from 'react-icons/fa';\r\nimport { GoTextSize } from 'react-icons/go';\r\nimport { IoIosColorPalette } from 'react-icons/io';\r\nimport { resetProject, cancelCreatingTodo } from '../actions';\r\n\r\nconst anime = 'animated fadeIn';\r\n\r\nconst Tools = (props) => {\r\n\tconst resetProject = () => {\r\n\t\tif (\r\n\t\t\twindow.confirm('Are you sure you want to restart the current project?')\r\n\t\t) {\r\n\t\t\tprops.resetProject();\r\n\t\t\tprops.cancelCreatingTodo();\r\n\t\t}\r\n\t};\r\n\r\n\tif (props.working) {\r\n\t\treturn (\r\n\t\t\t<div className=\"tools\">\r\n\t\t\t\t<FaImage className={`tools-icon ${anime}`} />\r\n\t\t\t\t<GoTextSize className={`tools-icon ${anime}`} />\r\n\t\t\t\t<IoIosColorPalette className={`tools-icon ${anime}`} />\r\n\t\t\t\t<FaSkullCrossbones\r\n\t\t\t\t\tclassName={`tools-icon ${anime}`}\r\n\t\t\t\t\tonClick={resetProject}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tworking: state.working,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, { resetProject, cancelCreatingTodo })(\r\n\tTools,\r\n);\r\n","import React from 'react';\r\nimport { DndProvider } from 'react-dnd';\r\nimport Backend from 'react-dnd-html5-backend';\r\n\r\n//style\r\nimport '../styles/App.scss';\r\n//Components\r\nimport Header from './Header';\r\nimport Content from './Content';\r\nimport Tools from './Tools';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<DndProvider backend={Backend}>\r\n\t\t\t<div className=\"app-container\">\r\n\t\t\t\t<Header />\r\n\r\n\t\t\t\t<Content />\r\n\t\t\t\t<Tools />\r\n\t\t\t</div>\r\n\t\t</DndProvider>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\n\r\n//Reducers!\r\nexport const workingStateReducer = (working = false, action) => {\r\n\tif (action.type === 'START_PROJECT') {\r\n\t\treturn (working = true);\r\n\t}\r\n\tif (action.type === 'RESET_PROJECT') {\r\n\t\treturn (working = false);\r\n\t}\r\n\treturn working;\r\n};\r\n//FORM OF CREATING A TASK STATE\r\nexport const creatingTodoReducer = (creatingTodo = false, action) => {\r\n\tif (action.type === 'CREATING_TODO') {\r\n\t\treturn (creatingTodo = true);\r\n\t}\r\n\tif (action.type === 'CREATE_TODO' || action.type === 'CANCEL_CREATING_TODO') {\r\n\t\treturn (creatingTodo = false);\r\n\t}\r\n\treturn creatingTodo;\r\n};\r\n\r\n//Todolists!!!!!\r\nexport const pendingTodoListReducer = (taskList = [], action) => {\r\n\t//creating a task\r\n\tif (action.type === 'CREATE_TODO') {\r\n\t\tconst idCreator = taskList.length;\r\n\t\tconst task = {\r\n\t\t\tid: idCreator,\r\n\t\t\ttext: action.payload.task,\r\n\t\t\tmode: action.payload.mode,\r\n\t\t};\r\n\t\treturn [...taskList, task];\r\n\t}\r\n\r\n\t//deleting a task\r\n\tif (action.type === 'DELETE_TODO') {\r\n\t\treturn taskList.filter((task) => {\r\n\t\t\tif (task.id !== action.payload.taskId) {\r\n\t\t\t\treturn task;\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tif (action.type === 'CHANGE_MODE') {\r\n\t\treturn taskList.filter((task) => {\r\n\t\t\tif (task.id === action.payload.id) {\r\n\t\t\t\ttask.mode = action.payload.mode;\r\n\t\t\t\treturn task;\r\n\t\t\t}\r\n\t\t\treturn task;\r\n\t\t});\r\n\t}\r\n\r\n\tif (action.type === 'RESET_PROJECT') {\r\n\t\ttaskList = [];\r\n\t}\r\n\r\n\treturn taskList;\r\n};\r\n\r\n//\r\nexport default combineReducers({\r\n\tworking: workingStateReducer,\r\n\tcreatingTodo: creatingTodoReducer,\r\n\ttaskList: pendingTodoListReducer,\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\n\r\nimport App from \"./components/App\";\r\nimport reducers from \"./reducers\";\r\n\r\nReactDOM.render(\r\n  <Provider store={createStore(reducers)}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}